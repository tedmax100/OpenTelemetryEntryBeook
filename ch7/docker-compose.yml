version: '3.9'

services:
  app:
    container_name: app
    build: ./app
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/rolldice"]
      interval: 20s
      timeout: 5s
      retries: 3
    networks:
      - ch7
    depends_on:
      fluentd:
        condition: service_healthy
      otelcol:
        condition: service_healthy
    logging:
      driver: fluentd
      options:
        fluentd-address: fluentd:24224
        tag: app
  other_app:
    container_name: other_app
    build: ./other_app
    ports:
      - "8081:8081"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/rolldice"]
      interval: 20s
      timeout: 5s
      retries: 3
    networks:
      - ch7
    depends_on:
      fluentd:
        condition: service_healthy
      otelcol:
        condition: service_healthy
    logging:
      driver: fluentd
      options:
        fluentd-address: fluentd:24224
        tag: app

  fluentd:
    image: fluent/fluent-bit
    volumes:
        - ./fluentbit:/fluent-bit/etc
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:2020/"]
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    hostname: fluentd
    networks:
      - ch7
      
  otelcol:
      image: otel/opentelemetry-collector-contrib:0.94.0
      container_name: otel-col
      deploy:
        resources:
          limits:
            memory: 125M
      restart: unless-stopped
      command: [ "--config=/etc/otelcol-config.yml", "--config=/etc/otelcol-config-extras.yml" ]
      volumes:
        - ./otelcollector/otelcol-config.yml:/etc/otelcol-config.yml
        - ./otelcollector/otelcol-config-extras.yml:/etc/otelcol-config-extras.yml
      ports:
        - "4317:4317"          # OTLP over gRPC receiver
        - "4318:4318"     # OTLP over HTTP receiver
        - "9464"          # Prometheus exporter
        - "8888"          # metrics endpoint
        - "55679:55679" # zpages extension
        - "1888:1888"   # pprof extension
        - "13133:13133" # health_check extension
      healthcheck:
        test: ["CMD-SHELL", "curl -f http://localhost:13133/"]
        interval: 30s
        timeout: 10s
        retries: 3
      networks:
        - ch7
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    deploy:
      resources:
        limits:
          memory: 100M
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      otelcol:
        condition: service_healthy
      loki:
        condition: service_healthy
      tempo:        
        condition: service_healthy
      prometheus:        
        condition: service_healthy

    ports:
      - "3000:3000"
    networks:
      - ch7

  loki:
    image: grafana/loki:latest
    container_name: loki
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki/loki.yaml:/etc/loki/local-config.yaml
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "3100:3100"
    networks:
      - ch7

  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./tempo/tempo.yaml:/etc/tempo.yaml
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:3200/metrics || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    ports:
      - "14268:14268"  # jaeger ingest
      - "3200:3200"   # tempo
      - "9095:9095" # tempo grpc
      # - "4317:4317"  # otlp grpc
      #- "4318:4318"  # otlp http
      - "9411:9411"   # zipkin
    networks:
      - ch7

  prometheus:
    image: quay.io/prometheus/prometheus:v2.43.0
    container_name: prometheus
    command:
      - --web.console.templates=/etc/prometheus/consoles
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --storage.tsdb.retention.time=1h
      - --config.file=/etc/prometheus/prometheus-config.yaml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
      - --web.route-prefix=/
      - --enable-feature=exemplar-storage
    volumes:
      - ./prometheus/prometheus-config.yaml:/etc/prometheus/prometheus-config.yaml
    deploy:
      resources:
        limits:
          memory: 300M
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:9090/-/healthy || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    ports:
      - "9090:9090"
    networks:
      - ch7
  
  # *****
  # Tests
  # *****
  # Telemetrygen Metrics Tests
  telemetrygen-metrics:
    image: ghcr.io/open-telemetry/opentelemetry-collector-contrib/telemetrygen:latest
    container_name: telemetrygen
    profiles:
      - tests
    command: ["metrics", "--duration", "5s", "--otlp-insecure", "--otlp-endpoint", "otelcol:4317"]
    depends_on:
      - otelcol
    networks:
      - ch7

  # Telemetrygen Logs Tests
  telemetrygen-logs:
    image: ghcr.io/open-telemetry/opentelemetry-collector-contrib/telemetrygen:latest
    container_name: telemetrygen
    profiles:
      - tests
    command: ["logs", "--duration", "5s", "--otlp-insecure", "--otlp-endpoint", "otelcol:4317"]
    depends_on:
      - otelcol
    networks:
      - ch7

  # Telemetrygen Traces Tests
  telemetrygen-traces:
    image: ghcr.io/open-telemetry/opentelemetry-collector-contrib/telemetrygen:latest
    container_name: telemetrygen
    profiles:
      - tests
    command: ["traces", "--duration", "5s", "--otlp-insecure", "--otlp-endpoint", "otelcol:4317"]
    depends_on:
      - otelcol
    networks:
      - ch7

networks:
  ch7:
    name: ch7
    driver: bridge

volumes:
  loki-data:
    driver: local